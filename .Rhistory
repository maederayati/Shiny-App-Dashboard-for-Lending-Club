hist(df[,1])
ggplot(df, aes(x=df[,1])) +
geom_histogram(aes(fill=df[,4]), position="stack")
ggplot(df, aes(x=df[,1], y=..density..)) +
geom_density(aes(fill=df[,4]), position="stack")
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=10)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=5)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], alpha=0.5), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30)
hist(df[,1])
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], color="grey"), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], color="black"), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], col="black"), bins=30)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], col="black"), bins=30)+ geom_bar(stat = "identity")
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4], col="black"), bins=30, colour="black")
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black", alpha=0.7)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black", alpha=0.9)
ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")
plot1<- ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")+
+ guides(fill=guide_legend(title="Loan Term"))
+ guides(fill=guide_legend(title="New Legend Title"))
plot1<- ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")+
guides(fill=guide_legend(title="Loan Term"))
plot1
plot1<- ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")+
guides(fill=guide_legend(title="Loan Term"))+
xlab("Interst Rate")+
ylab("Number of Loans ")+ggtitle("Interest Rate Hisotgram")
plot1
floor(30-20.6)
runApp()
runApp()
runApp()
library(shiny)
library(shiny)
library(ggplot2)
library(caret)
library(datasets)
library(randomForest)
library(Scale)
library(scales)
library(zoo)
library(corrplot)
library(knitr)
library(gridExtra)
library(kableExtra)
library(pander)
library(xtable)
library(corrplot)
#d<-read.csv("loan.csv")
load("d_issue_date.RData")
load("d_loan_amnt.RData")
load("d_int_rate.RData")
load("d_loan_term.RData")
function(input, output) {
output$text <- renderUI({HTML("Welcome to the Snap! finance Web Application for
data analaysis!<br/>")})
output$plot1<-renderPlot({
plot(1:10)
})
output$plot3<-renderPlot({
plot(1:10)
})
output$table1<-renderTable(
caption="Income Statistics",
caption.placement = getOption("xtable.caption.placement", "top"),
{
load("summaryTable1.RData")
summaryTable1
}
)
output$loanTerm_plot<-renderPlot({
load("loanTermPlot.RData")
p
})
output$newui<-renderUI({
if(input$variable=="int_rate"){
load("d_int_rate.RData")
load("d_loan_amnt.RData")
load("d_loan_term.RData")
list(sliderInput("int_rate_range", "Interst Rate Range:",
min = 5, max = 30, step=1,
value = c(5,30)),
sliderInput("loan_amnt_range", "Select Loan Amount Range:", min=500, max=35000, value = c(500,35000)),
checkboxGroupInput("loan_term_check", "Select Loan Term:",
c("36 Months"=" 36 months","60 Months"=" 60 months"),
selected =c(" 36 months"," 60 months") ),
dateRangeInput("issue_date_range", label="Select Issued Date Range", start = "2006-12-01", end = "2016-08-01", min = "2006-12-01",
max = "2016-08-01", format = "yyyy-mm-dd", startview = "month", weekstart = 0,
language = "en", separator = " to ", width = NULL)
)
}
else if(input$variable=="dti"){
load("d_dti.RData")
sliderInput("dti_range", "Select DTI Range:", min=0, max=50, value = c(0,50))
}
else if(input$variable=="loan_term"){
load("d_loan_term.RData")
load("d_loan_amnt.RData")
sliderInput("loan_amnt", "Select Loan Amount Range:", min=500, max=35000, value = c(500,35000))
}
else if(input$variable=="purpose"){
load("d_purpose.RData")
load("d_loan_amnt.RData")
sliderInput("loan_amnt", "Select Loan Amount Range:", min=500, max=35000, value = c(500,35000))
}
else if(input$variable=="issue_date"){
load("d_issue_date.RData")
load("d_loan_amnt.RData")
load("d_int_rate.RData")
list(dateRangeInput("issue_date_range", label="Select Issued Date Range", start = "2006-12-01", end = "2016-08-01", min = "2006-12-01",
max = "2016-08-01", format = "yyyy-mm-dd", startview = "month", weekstart = 0,
language = "en", separator = " to ", width = NULL),
radioButtons("parameter_vs_date", "Select Y Axis Parameter:", selected="sum_loan_amount",
c("Summation of Loan Amount" = "sum_loan_amount",
"Average Loan Amount" = "mean_loan_amount",
"Number of Loans" = "count_loan",
"Average Interest Rate" = "mean_int")))
}
})
render_related_plot<-reactive({
if(input$variable=="int_rate"){
df<-cbind.data.frame(d_int_rate,d_loan_amnt,d_issue_date, d_loan_term)
names(df)<-c("d_int_rate","d_loan_amnt","d_issue_date", "d_loan_term")
imin<-input$int_rate_range[1]
imax<-input$int_rate_range[2]
imin2<-input$loan_amnt_range[1]
imax2<-input$loan_amnt_range[2]
icheck<-input$loan_term_check
idatemin<-as.Date(input$issue_date_range[1])
idatemax<-as.Date(input$issue_date_range[2])
df<-df[(df[,1]>=imin &
df[,1]<=imax &
df[,2]>=imin2 &
df[,2]<=imax2 &
df[,4] %in% icheck &
df[,3]>=idatemin &
df[,3]<=idatemax),]
plot1<- ggplot(df)+geom_histogram(aes(x=df[,1], fill=df[,4]), bins=30, colour="black")+
guides(fill=guide_legend(title="Loan Term"))+
xlab("Interst Rate")+
ylab("Number of Loans ")+ggtitle("Interest Rate Stacked Hisotgram")
plot2<- ggplot(df)+geom_histogram(aes(x=df[,2], fill=df[,4]), bins=30, colour="black")+
guides(fill=guide_legend(title="Loan Term"))+
xlab("Interst Rate")+
ylab("Number of Loans ")+ggtitle("Loan Amount Stacked Hisotgram")
plot1
}
else if(input$variable=="dti"){
df<-d_dti
imin<-input$dti_range[1]
imax<-input$dti_range[2]
df<-as.data.frame(df[which(df[,1]>=imin),])
df<-as.data.frame(df[which(df[,1]<=imax),])
names(df)<-"weight"
plot1 <- ggplot(df, aes(x = weight))+
geom_histogram( fill = "blue" ,color="gray", alpha = 0.5, bins=20)+
#geom_density(aes(x=df),colour="black", adjust=4)+
xlab("DTI")+
ylab("Number of Loans ")+ggtitle("DTI Hisotgram")
plot1
}
else if(input$variable=="loan_term"){
imin<-input$loan_amnt[1]
imax<-input$loan_amnt[2]
df<-as.data.frame(table(d_loan_term[(d_loan_amnt<=imax & d_loan_amnt>=imin),]))
names(df)<-c("var","value")
df[,2]<-df[,2]/sum(df[,2])
plot1<- ggplot(df, aes(x="", y=value, fill=var))+
geom_bar(width = 1, stat = "identity")+ coord_polar("y", start=0) +
guides(fill=guide_legend(title="Loan Term"))+xlab("")+ylab("")+ggtitle("Loan Term")
plot1
}
else if(input$variable=="purpose"){
imin<-input$loan_amnt[1]
imax<-input$loan_amnt[2]
df<-as.data.frame(table(d_purpose[(d_loan_amnt<=imax & d_loan_amnt>=imin),]))
names(df)<-c("var","value")
rownames(df)<-NULL
df[,2]<-round((df[,2]/sum(df[,2]))*100,1)
plot2<-ggplot(df, aes(x = var, y = value)) +
geom_bar(stat = "identity", colour="black", fill="blue", alpha=0.5)+geom_text(aes(label = value), size = 3,  vjust = -0.3)+theme(axis.text.x = element_text(angle = 20, hjust = 1))+xlab("")+ylab("% of Loans")+
ggtitle("Loan Purpose") +
theme(plot.title = element_text(hjust = 0.5))
plot2
}
else if(input$variable=="issue_date"){
d<-cbind.data.frame(d_issue_date,d_loan_amnt,d_int_rate)
names(d)<-c("d_issue_date","d_loan_amnt","d_int_rate")
ibutton<-input$parameter_vs_date
idatemin<-as.Date(input$issue_date_range[1])
idatemax<-as.Date(input$issue_date_range[2])
d<-d[(d[,1]>=idatemin &d[,1]<=idatemax),]
if(ibutton=="sum_loan_amount"){
df<-aggregate(d_loan_amnt~d_issue_date,data=d, sum)
plot1<-ggplot(df, aes(d_issue_date, d_loan_amnt)) + geom_point()  +
xlab("Date") + ylab("Summation of Loan Amounts")+
geom_smooth(method="loess")
#scale_x_date(breaks=date_breaks("6 month"), labels=date_format("%b-%Y"))+theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_smooth(method="loess")
plot1
}else if(ibutton=="mean_loan_amount"){
df<-aggregate(d_loan_amnt~d_issue_date,data=d, mean)
plot1<-ggplot(df, aes(d_issue_date, d_loan_amnt)) + geom_point()  +
xlab("Date") + ylab("Average Loan Amounts")+ #scale_x_date(breaks=date_breaks("6 month"), labels=date_format("%b-%Y"))+theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_smooth(method="loess")
geom_smooth(method="loess")
plot1
}else if(ibutton=="count_loan"){
df<-aggregate(d_loan_amnt~d_issue_date,data=d, length)
plot1<-ggplot(df, aes(d_issue_date, d_loan_amnt)) + geom_point()  +
xlab("Date") + ylab("Number of new Loans")+ #scale_x_date(breaks=date_breaks("6 month"), labels=date_format("%b-%Y"))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
geom_smooth(method="loess")
plot1
}else if(ibutton=="mean_int"){
df<-aggregate(d_int_rate~d_issue_date,data=d, mean)
plot1<-ggplot(df, aes(d_issue_date, d_int_rate)) + geom_point()  +
xlab("Date") + ylab("Average Interest")+# scale_x_date(breaks=date_breaks("6 month"), labels=date_format("%b-%Y"))+theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_smooth(method="loess")
geom_smooth(method="loess")
plot1
}
}
})
output$show_plot<-renderPlot(render_related_plot())
render_related_cor<-reactive({
load("loan_related_vars.RData")
load("borrower_related_vars.RData")
load("correlation_all.RData")
load("nqd.RData")
load("res1_80.RData")
if(input$confLevel==0.80){
load("res1_80.RData")
res1<-res1_80
}
if(input$confLevel==0.85){
load("res1_85.RData")
res1<-res1_85
}
if(input$confLevel==0.90){
load("res1_90.RData")
res1<-res1_90
}
if(input$confLevel==0.95){
load("res1_95.RData")
res1<-res1_95
}
if(input$Loan_vs_borrower=="loan_borrower"){
corplot1<-corrplot(correlation_all[borrower_related_vars,loan_related_vars],p.mat = res1[[1]][borrower_related_vars,loan_related_vars],
method="color",tl.cex = 1, tl.col = 'black',na.label = NA,
title="Correlation Matrix for Loan-Related vs. Borrower-Related Attributes",
mar=c(0,1,1,0)
)
corplot1
}else if(input$Loan_vs_borrower=="loan_loan"){
corplot2<-corrplot(correlation_all[loan_related_vars,loan_related_vars],p.mat = res1[[1]][loan_related_vars,loan_related_vars],
method="color",tl.cex = 1,
tl.col = 'black',na.label = NA,
title="Correlation Matrix for Loan-Related vs. Loan-Related Attributes" ,
mar=c(0,0,1,0))
corplot2
}else{
corplot3<-corrplot(correlation_all[borrower_related_vars,borrower_related_vars],p.mat = res1[[1]][borrower_related_vars,borrower_related_vars],
method="color",
tl.cex = 1,
tl.col = 'black',na.label = NA,
title="Correlation Matrix for Borrower-Related vs. Borrower-Related Attributes",
mar=c(0,0,1,0))
corplot3
}
})
output$show_cor_plot<-renderPlot(render_related_cor())
#      reactive({
#      load("loan_related_vars.RData")
#      load("borrower_related_vars.RData")
#      load("correlation_all.RData")
#      if(input$Loan_vs_borrower=="loan_borrower"){
#
#          corplot1<-corrplot(correlation_all[loan_related_vars,borrower_related_vars],
#                             method="color",tl.cex = 0.7, tl.col = 'black',na.label = NA,
#                             title="Correlation Matrix for Loan-Related vs. Borrower-Related Attributes",
#                             mar=c(0,0,1,0))
#          corplot1
#
#      }else if(input$Loan_vs_borrower=="loan_loan"){
#
#          corplot2<-corrplot(correlation_all[loan_related_vars,loan_related_vars],method="color",tl.cex = 0.7,
#                             tl.col = 'black',na.label = NA,
#                             title="Correlation Matrix for Loan-Related vs. Loan-Related Attributes" ,
#                             mar=c(0,0,1,0))
#          corplot2
#
#
#      }else{
#
#          corplot3<-corrplot(correlation_all[borrower_related_vars,borrower_related_vars],method="color",tl.cex = 0.7, tl.col = 'black',na.label = NA, title="Correlation Matrix for Borrower-Related vs. Borrower-Related Attributes", mar=c(0,0,1,0))
#          corplot3
#
#
#      }
#
# # })
}
source('C:/GDrive/snapFinanceTest/lending_club/myShinyApp/server.R')
shiny::runApp()
runApp()
runApp()
runApp()
tdf<-as.data.frame(table(df[,4]))
table(df[,4])
table(as.vector(df[,4]))
head(df)
df<-cbind.data.frame(d_int_rate,d_loan_amnt,d_issue_date, d_loan_term)
names(df)<-c("d_int_rate","d_loan_amnt","d_issue_date", "d_loan_term")
load("d_issue_date.RData")
load("d_loan_amnt.RData")
load("d_loan_term.RData")
load("d_int_rate")
load("d_int_rate.RData")
df<-cbind.data.frame(d_int_rate,d_loan_amnt,d_issue_date, d_loan_term)
names(df)<-c("d_int_rate","d_loan_amnt","d_issue_date", "d_loan_term")
tdf<-as.data.frame(table(df[,4]))
tdf
names(tdf)<-c("var","value")
plot3<- ggplot(tdf, aes(x=var, y=value, fill=var))+
geom_bar(width = 1, stat = "identity")+ coord_polar("y", start=0) +
guides(fill=guide_legend(title="Loan Term"))+xlab("")+ylab("")+ggtitle("Loan Term")
plot3
plot3<- ggplot(tdf, aes(x=var, fill=var))+
geom_bar(width = 1, stat = "identity")+ coord_polar("y", start=0) +
guides(fill=guide_legend(title="Loan Term"))+xlab("")+ylab("")+ggtitle("Loan Term")
plot3
df<-as.data.frame(table(d_loan_term))
names(df)<-c("var","value")
df[,2]<-df[,2]/sum(df[,2])
plot1<- ggplot(df, aes(x="", y=value, fill=var))+
geom_bar(width = 1, stat = "identity")+ coord_polar("y", start=0) +
guides(fill=guide_legend(title="Loan Term"))+xlab("")+ylab("")+ggtitle("Loan Term")
plot1
df
tdf
runApp()
tdf<-as.data.frame(table(df[,4]))
tdf[,2]<-tdf[,2]/nrow(df)
runApp()
df<-cbind.data.frame(d_int_rate,d_loan_amnt,d_issue_date, d_loan_term)
names(df)<-c("d_int_rate","d_loan_amnt","d_issue_date", "d_loan_term")
tdf<-as.data.frame(table(df[,4]))
tdf
tdf[,2]<-tdf[,2]/sum(tdf[,2])
tdf
names(tdf)<-c("var","value")
plot3<- ggplot(tdf, aes(x=var, y=value, fill=var))+
geom_bar(width = 1, stat = "identity")+ coord_polar("y", start=0) +
guides(fill=guide_legend(title="Loan Term"))+xlab("")+ylab("")+ggtitle("Loan Term")
plot3
tdf
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d<-read.csv("loan.csv")
unique(d$loan_status)
dt<-d[d$loan_status=="Fully Paid",]
nrow(dt)
head(dt[,c("loan_amnt","total_pymnt")])
head(dt[,c("loan_amnt","total_pymnt", "recoveries")])
head(dt[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int")])
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int")])
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","loan_status")])
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","loan_status")],20)
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","total_rec_late_fee",
"total_rec_prncp",
,"loan_status")],20)
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","total_rec_late_fee",
"total_rec_prncp",
"loan_status")],20)
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","total_rec_late_fee",
"total_rec_prncp",
"loan_status")],20)[,2]
head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","total_rec_late_fee",
"total_rec_prncp",
"loan_status")],20)[2,]
sum(head(d[,c("loan_amnt","total_pymnt", "recoveries", "total_rec_int","total_rec_late_fee",
"total_rec_prncp",
"loan_status")],20)[2,c(6,5,4,3)])
d_total_pymnt<-as.data.frame(d$total_pymnt)
save(d_total_pymnt,file="d_total_pymnt.RData")
df<-aggregate(total_pymnt+loan_amnt~issued_d,data=d, sum)
df<-aggregate(total_pymnt+loan_amnt~issue_d,data=d, sum)
head(df)
df<-aggregate(total_pymnt~issue_d,data=d, sum)
df1<-aggregate(total_pymnt~issue_d,data=d, sum)
df2<-aggregate(loan_amnt~issue_d,data=d, sum)
cbind.data.frame(df1,df2[,2])
d<-cbind.data.frame(d_issue_date,d_loan_amnt,d_total_pymnt)
names(d)<-c("d_issue_date","d_loan_amnt","d_total_pymnt")
df1<-aggregate(d_loan_amnt~d_issue_date,data=d, sum)
df2<-aggregate(d_total_pymnt~d_issue_date,data=d, sum)
df<-data.frame(d_issue_date=df1[,1],d_loan_amnt=df1[,2],d_total_pymnt=df2[,2])
head(df)
rbind(df1,df2)
runApp()
d<-cbind.data.frame(d_issue_date,d_loan_amnt,d_total_pymnt)
names(d)<-c("d_issue_date","d_loan_amnt","d_total_pymnt")
runApp()
d<-cbind.data.frame(d_issue_date,d_loan_amnt,d_total_pymnt)
names(d)<-c("d_issue_date","d_loan_amnt","d_total_pymnt")
runApp()
runApp()
runApp()
runApp()
d<-read.csv("loan.csv")
unique(d$loan_status)
n_loan_status<-unique(d$loan_status)
save(n_loan_status, file="n_loan_status.RData")
runApp()
d_loan_status<-as.data.frame(d$loan_status)
save(d_loan_status, file="d_loan_status.RData")
runApp()
df
runApp()
d_installment<-as.data.frame(d$installment)
save(d_installment, file="d_installment.RData")
runApp()
d_total_int<-as.data.frame(d$total_rec_int)
save(d_total_int,file="d_total_int.RData")
runApp()
install.packages("grid")
install.packages("grid")
library(grid)
library(gridExtra)
runApp()
?tableGrob
runApp()
data.frame(1:10,1:10)
s<-data.frame(1:10,1:10)
tableGrob(s)
p<-tableGrob(s)
p
grid.draw(plot10)
grid.draw(p)
grid.draw(p)
grid.draw(p)
tableG(s,rows=NULL)
tableGrob(s,rows=NULL)
p<-tableGrob(s,rows=NULL)
grid.draw(p)
df<-cbind.data.frame(d_int_rate,d_loan_amnt,d_issue_date, d_loan_term, d_loan_status, d_installment, d_total_pymnt,d_total_int)
names(df)<-c("d_int_rate","d_loan_amnt","d_issue_date", "d_loan_term","d_loan_status","d_installment","d_total_pymnt","d_total_int")
save(df,file="df.RData")
runApp()
shiny::runApp()
runApp()
runApp()
deployApp()
library(rsconnect)
shiny::runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
load("nqd.RData")
load("loan_related_vars.RData")
load("borrower_related_vars.RData")
names(nqd)
loan_related_vars<-c(1,2,3,4,5,6,12,13,14,26:36,38,40)
borrower_related_vars<-c(7,8,9,10,11,15,16:25,37,39,41:62)
save(loan_related_vars,file="loan_related_vars.RData")
save(borrower_related_vars,file="borrower_related_vars.RData")
runApp()
load("df.RData")
d<-read.csv("../loan.csv")
ncol(df)
df<-cbind.data.frame(df,d[,"home_ownership"])
df<-cbind.data.frame(df,d[,"emp_length"])
head(df,1)
names(df)
runApp()
runApp()
save(df, file="df.RData")
names(df)
runApp()
library(datasets)
head(mtcars)
p<-ggplot(mtcars, aes(x=hp, y=..density..))+geom_density()
p
runApp()
library(datasets)
p<-ggplot(mtcars, aes(x=hp, y=..density..))+geom_density()
p
library(datasets)
p<-ggplot(mtcars, aes(x=hp))+geom_density()
p
p
p<-ggplot(mtcars, aes(x=hp, y=..density..))+geom_density()
p
mtcars
nrow(mtcars)
p<-ggplot(mtcars, aes(x=hp))+geom_density()
p
shiny::runApp()
